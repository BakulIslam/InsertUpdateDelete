@model Insert_Update_Delete_In_Modal_PopUp.Models.Student
@{
    ViewBag.Title = "Index";
}

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary fa-light fa-plus fa-1x"  data-toggle="modal" data-target="#exampleModal">
    Add New Student
</button>
<br />

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add new student</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control name", placeholder = "Enter your name" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Roll, htmlAttributes: new { @class = "control-label col-md-2 " })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Roll, new { htmlAttributes = new { @class = "form-control roll", placeholder = "Enter your roll" } })
                                        @Html.ValidationMessageFor(model => model.Roll, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Reg, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Reg, new { htmlAttributes = new { @class = "form-control reg", placeholder = "Enter your reg" } })
                                        @Html.ValidationMessageFor(model => model.Reg, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control city", placeholder = "Enter your city" } })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control department", placeholder = "Enter your department" } })
                                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control gender", placeholder = "Enter your gender" } })
                                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                            </div>
                            <div class="col-md-5">

                            </div>
                            <div class="col-md-3">
                                <button type="button" style="text-align:center;" class="btn btn-light btn-lg btn-outline-dark fa-light fa-plus" id="DataSaveButton">&nbsp; Save</button>

                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>


<br />

<table class="table table-bordered table-hover   table-striped">
    <tr style="font-size:18px; text-align:center;">
        <th>
            NAME
        </th>
        <th>
            ROLL
        </th>
        <th>
            REG
        </th>
        <th>
            CITY
        </th>
        <th>
            DEPARTMENT
        </th>
        <th>
            GENDER
        </th>
        <th>ACTIONS</th>
    </tr>

    @foreach (var item in ViewBag.Data)
    {
        <tr>

            <td>
                @item.Name

            </td>
            <td>
                @item.Roll
            </td>
            <td>
                @item.Reg
            </td>
            <td>
                @item.City
            </td>
            <td>
                @item.Department
            </td>
            <td>
                @item.Gender

            </td>
            <td>
                 
                <button type="button" onclick="EditGetData(@item.Id)" class="btn btn-info fa-regular fa-pen-to-square" data-toggle="modal" data-target="#exampleModal2">
                    &nbsp; Edit
                </button> &nbsp;
                <a href="@Url.Action("Delete","Home",new {id=@item.Id })" class="btn btn-danger fa-solid fa-trash" onclick="return confirm('Are you sure you want to delete this item?');"> &nbsp; Delete</a>
            </td>
        </tr>
    }

</table>



<!--Edit Modal -->
<div class="modal fade" id="exampleModal2" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title form-control-color" style="color:#e01c1c" id="exampleModalLabel">Update Student Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">



                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="col-md-6">

                            @*@Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control ids" } })*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control ids", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control names" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Roll, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Roll, new { htmlAttributes = new { @class = "form-control rolls" } })
                                    @Html.ValidationMessageFor(model => model.Roll, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Reg, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Reg, new { htmlAttributes = new { @class = "form-control regs" } })
                                    @Html.ValidationMessageFor(model => model.Reg, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control citys" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control departments" } })
                                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control genders" } })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <br /><br />
                                    <input type="submit" id="editsavebutton" value="Update" class="btn btn-danger btn-outline-danger" />
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#DataSaveButton").click(function () {
            var Name = $(".name").val();
            var Roll = $(".roll").val();
            var Reg = $(".reg").val();
            var City = $(".city").val();
            var Department = $(".department").val();
            var Gender = $(".gender").val();
            var student = {
                Name: Name,
                Roll: Roll,
                Reg: Reg,
                City: City,
                Department: Department,
                Gender: Gender
            };
            $.ajax({
                type: "POST",
                url: "/Home/SaveStudent",
                data: JSON.stringify(student),
                dataType: "json",
                contentType: 'application/json;charset=utf-8',
                success: function (data) {
                    $("#exampleModal").modal('hide');
                    alert("Data insert succesfully");
                    location.reload();
                },
                error: function () {
                    alert("Data insert fail !!");
                }
            });
        });


        $("#editsavebutton").click(function () {
            var Id = $(".ids").val();
            var Name = $(".names").val();
            var Roll = $(".rolls").val();
            var Reg = $(".regs").val();
            var City = $(".citys").val();
            var Department = $(".departments").val();
            var Gender = $(".genders").val();
            var student = {
                Id: Id,
                Name: Name,
                Roll: Roll,
                Reg: Reg,
                City: City,
                Department: Department,
                Gender: Gender
            };
            $.ajax({
                type: "POST",
                url: "/Home/Edit",
                dataType: "JSON",
                data: JSON.stringify(student),
                contentType: 'application/json;charset=utf-8',
                success: function (datas) {
                   // 
                    //$("#exampleModal2").modal('hide');
                    alert("Data Update succesfully Done " + datas);
                    location.reload();
                },
                error: function () {
                    alert("Data Update fail !!");
                }
            });
        });




    });

    function EditGetData(ids) {
        $.ajax({
            type: "GET",
            url: "/Home/Edit?id=" + ids,
            dataType: "json",
            success: function (data) {
                var id = data.Id;
                var name = data.Name;
                var roll = data.Roll;
                var reg = data.Reg;
                var city = data.City;
                var dep = data.Department;
                var gender = data.Gender;
                $(".ids").val(id);
                $(".names").val(name);
                $(".rolls").val(roll);
                $(".regs").val(reg);
                $(".citys").val(city);
                $(".departments").val(dep);
                $(".genders").val(gender);

            },
            error: function (data) {
                alert("Data Edit fail ! ! " + data);
            }
        });
    }

</script>